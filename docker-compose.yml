version: '3.7'

services:
  # MySQL
  mysql:
    image: mysql:5.7.44
    container_name: mysql
    ports:
      - "29101:3306"
    restart: unless-stopped
    privileged: true
    ulimits:
      nproc: 655350
      nofile:
        soft: 131072
        hard: 400000
    #healthcheck:
    #  test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
    #  interval: 10s # 间隔时间
    #  timeout: 3s  # 超时时间
    #  retries: 50   # 重试次数
    command: [
      #设置数据库表的数据集
      '--character-set-server=utf8mb4', 
      #设置数据库表的数据集
      '--collation-server=utf8mb4_general_ci', 
    ]
    environment:
      # MySQL配置链接权限
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST:-%}
      # MySQL配置创建数据库名称
      MYSQL_DATABASE: ${MYSQL_DATABASE:-gameframex}
      # MySQL配置创建数据库账号密码
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      # MySQL配置时区
      TZ: Asia/Shanghai
    # 环境变量注入
    env_file:
      # 开发环境的配置文件
      - ./development.env
      # 生产环境的配置文件
      # - ./production.env
    volumes:
      # MySQL数据存储映射
      - ./running/mysql/mysql:/var/lib/mysql
      # MySQL配置文件映射
      - ./running/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
    # MySQL网络映射
      - gameframex_networks
  # 后台管理API
  gameframex.web.admin.api:
  # 自定义镜像私有镜像地址和版本
    image: registry.cn-shenzhen.aliyuncs.com/gameframex/gameframex.web.admin.api:1.0.0.0
    # 容器名称
    container_name: gameframex-web-admin-api
    # build:
    #   context: ./GameFrameX.Admin.Web.Api
    #   dockerfile: Dockerfile
    #   args:
    #     - no-cache
    ports:
      # 端口映射
      - "20802:20802"
    # 环境变量
    environment:
      # 数据库名称
      DatabaseName: ${DatabaseName:-gameframex}
      # 数据库类型
      DbType: ${DbType:-MySql}
      # 数据库链接字符串
      ConnectionString: ${ConnectionString:-Data Source=mysql;Database=gameframex;Port=3306;Uid=root;Pwd=123456;}
    # 环境变量注入
    env_file:
      # 开发环境的配置文件
      - ./development.env
      # 生产环境的配置文件
      # - ./production.env
    links:
      - mysql
    networks:
    # 网络映射
      - gameframex_networks
  # 客户端使用API
  gameframex.web.client.api:
    # 自定义镜像私有镜像地址和版本
    image: registry.cn-shenzhen.aliyuncs.com/gameframex/gameframex.web.client.api:1.0.0.0
    # 容器名称
    container_name: gameframex-web-client-api
    # build:
    #   context: ./GameFrameX.Admin.Client.Api
    #   dockerfile: Dockerfile
    #   args:
    #     - no-cache
    ports:
      - "20808:80"
      # - "20809:443"
    environment:
      # 数据库名称
      DatabaseName: ${DatabaseName:-gameframex}
      # 数据库类型
      DbType: ${DbType:-MySql}
      # 数据库链接字符串
      ConnectionString: ${ConnectionString:-Data Source=mysql;Database=gameframex;Port=3306;Uid=root;Pwd=123456;}
    # 环境变量注入
    env_file:
      # 开发环境的配置文件
      - ./development.env
      # 生产环境的配置文件
      # - ./production.env
    links:
      - mysql
    networks:
    # 网络映射
      - gameframex_networks
    depends_on:
    # 客户端API依赖的服务.需要等后台启动好了才能启动。如果部署在不同的机器上。可以删除这个配置
      - gameframex.web.admin.api
  # Web前端Vue
  gameframex.admin.web.vue:
    # 自定义镜像私有镜像地址和版本
    image: registry.cn-shenzhen.aliyuncs.com/gameframex/gameframex.admin.web.vue:1.0.0.0
    container_name: gameframex-admin-web-vue
    # build:
    #   context: ./GameFrameX.Admin.Web.Vue
    #   dockerfile: Dockerfile
    #   args:
    #     - no-cache
    ports:
      - "20800:80"
      # - "20801:443"
    environment:
      - TZ=Asia/Shanghai
    # 这里配置映射
    # volumes:
    #   - "./running/nginx/dist:/usr/share/nginx/html"
    #   - "./running/nginx/conf/nginx.conf:/etc/nginx/conf/nginx.conf"
    #   - "./running/nginx/key:/etc/nginx/key/"
    networks:
    # 网络映射
      - gameframex_networks
    restart: always
    depends_on:
    # 客户端API依赖的服务.需要等后台启动好了才能启动。如果部署在不同的机器上。可以删除这个配置
      - gameframex.web.admin.api
      - mysql
networks:
  gameframex_networks:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.100.1.0/24
          gateway: 172.100.1.1
